@page "/create"
@using BlazorBlogApp.Shared
@inject HttpClient Http 

<h3>Create a new blog post</h3>

<EditForm Model="@newBlogPost" OnValidSubmit="CreateNewBlogPost">
    <DataAnnotationsValidator />

    <div>
        <label for="title">Title</label>
        <InputText id="title" @bind-Value="newBlogPost.Title" class="form-control"/>
        <ValidationMessage For="@(() => newBlogPost.Title)"/>
    </div>
    <div>
        <label for="url">Url</label>
        <InputText id="url" @bind-Value="newBlogPost.Url" class="form-control" />
        <ValidationMessage For="@(() => newBlogPost.Url)" />
    </div>
    <div>
        <label for="description">Description</label>
        <InputText id="description" @bind-Value="newBlogPost.Description" class="form-control" />
    </div>
    <div>
        <label for="content">Content</label>
        <InputTextArea id="content" @bind-Value="newBlogPost.Content" class="form-control"/>
    </div>
    <div>
        <label for="date">Date</label>
        <InputDate id="date" @bind-Value="newBlogPost.DateCreated" class="form-control"/>
    </div>
    <div>
        <InputCheckbox id="isPublished" @bind-Value="newBlogPost.IsPublised" class="form-check-input"/>
        <label for="isPublished">Publish</label>
    </div>
    @*<ValidationSummary />*@
    <button type="submit" class="btn btn-primary">create</button>
</EditForm>

@code {
    BlogPost newBlogPost = new();

    async Task CreateNewBlogPost()
    {
        // var result = await BlogService.CreateNewBlogPost(newBlogPost);

        // 서버에 있는 컨트롤러와 통신
        var httpResponse = await Http.PostAsJsonAsync<BlogPost>($"api/BlogPost/CreateNewBlogPost", newBlogPost);

        if (httpResponse.IsSuccessStatusCode)
        {
            Console.WriteLine("Success");
        }
        else
        {
            Console.WriteLine("Fail");
        }
    }
}
